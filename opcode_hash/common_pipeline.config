[top_dir]
top_dir = ../datas/combined-0707/201707

[opcode2hash_source]
#source_dirs contains many dirs separated by semicolon，label，task，test,class_type are the corresponding value w.r.t the dirs
source_dirs = malicious/test/1;malicious/train/1;normal/test/0;normal/train/0
labels = 1;1;0;0
tasks = test;train;test;train
class_types = malware;malware;normal;normal

[opcode2hash_algorithm]
#optional algorithm :map_md5,map_shake
algorithm = map_md5

#bits should be able to be divied by 8
bits = 48
[opcode2hash_dest]
#suppose we save the converted bits into a csv files
dest_dirs = .



[hashbit2NN_source]
#source_dirs contain several dirs,split by ; and must include the specific file names

#training_dirs = ./train/malware/opcode.csv;./train/normal/opcode.csv
#testing_dirs = ./test/malware/opcode.csv;./test/normal/opcode.csv
#training_dirs = P:opcode-201707/combined-0707/201707/train/malware/opcode.csv;P:opcode-201707/combined-0707/201707/train/normal/opcode.csv
#testing_dirs = P:opcode-201707/combined-0707/201707/test/malware/opcode.csv;P:opcode-201707/combined-0707/201707/test/normal/opcode.csv

training_dirs = map_md5_48/train/malware/map_md5_48_opcode.csv;map_md5_48/train/normal/map_md5_48_opcode.csv
testing_dirs = map_md5_48/test/malware/map_md5_48_opcode.csv;map_md5_48/test/normal/map_md5_48_opcode.csv
[hashbit2NN_dest]
#suppose we save the converted bits into a csv files
dest_dirs = map_md5_48


[xgb_hyopt_xg_conf]
data = ./train_NN_format/NN_features.txt
label = ./train_NN_format/NNAI.txt
# xgmat = 0 mean we need to convert the original format data into libsvm, otherwise we directly read the file specified by xgdata
xgmat = 1
xgdata = ./train_NN_format/NN_features.txt.libsvm
n_fold = 3
#whether save the learned model
save_model = 1
#pred_test = 1 means that we need to input testing data and predict the testing data
pred_test = 1
#Evaluation metrics to be watched in CV.
metrics = recall
# whether the metrics is score or loss,1 means the higher score for this metrics the better performance
if_ascend = 1
booster = gbtree
objective = binary:logistic
[xgb_hyopt_test]
data = ./test_NN_format/NN_features.txt
label = ./test_NN_format/NNAI.txt
xgmat = 1
xgdata = ./test_NN_format/NN_features.txt.libsvm
